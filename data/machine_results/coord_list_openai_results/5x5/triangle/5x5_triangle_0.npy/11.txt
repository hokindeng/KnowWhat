You are tasked with solving a maze. The maze is a 2D grid with walls, empty spaces, a current player position and a goal position. The maze is encoded using a list of coordinates denoting the walls, a list of coordinates denoting the empty spaces (path), and coordinates for the current player position and goal position.
Your objective is to find a step-by-step solution to navigate from the current player position (P) to the goal position (G), moving only through empty spaces while avoiding walls. For reference, the coordinates of the top left corner of the maze are (0,0). You can move to any empty space that is adjacent to the current position: either up, down, left, right, or any diagonal. After each move, the maze will be updated to reflect your new position and presented to you again.
Here is the maze you should solve:

Walls: (0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (1, 0), (1, 1), (1, 2), (1, 4), (2, 0), (2, 1), (2, 4), (3, 0), (3, 2), (3, 4), (4, 4)
Empty: (1, 3), (2, 2), (2, 3), (3, 3), (4, 0), (4, 1), (4, 2)
Player position: (4, 3)
Goal: (3, 1)

Please provide the coordinates of your next move.To solve the maze, we need to find a path from the current player position (4, 3) to the goal position (3, 1). We can use a pathfinding algorithm like A* or BFS to find the shortest path. For simplicity, let's use BFS (Breadth-First Search) to find the next move.

Here are the steps to find the next move:

1. Initialize a queue with the current player position.
2. Keep track of visited positions to avoid cycles.
3. For each position, check all possible moves (up, down, left, right, and diagonals).
4. If a move leads to the goal, return that move.
5. If a move leads to an empty space, add it to the queue and mark it as visited.
6. Repeat until the goal is found or the queue is empty.

Let's apply this algorithm to the given maze.

### Step-by-Step Solution:

1. **Initialize the queue and visited set:**
   - Queue: [(4, 3)]
   - Visited: {(4, 3)}

2. **Process the queue:**
   - Current position: (4, 3)
   - Possible moves: (3, 3), (5, 3), (4, 2), (4, 4), (3, 2), (3, 4), (5, 2), (5, 4)

3. **Check each move:**
   - (3, 3): Empty space, add to queue and mark as visited.
   - (5, 3): Out of bounds.
   - (4, 2): Empty space, add to queue and mark as visited.
   - (4, 4): Wall.
   - (3, 2): Wall.
   - (3, 4): Wall.
   - (5, 2): Out of bounds.
   - (5, 4): Out of bounds.

4. **Update the queue and visited set:**
   - Queue: [(3, 3), (4, 2)]
   - Visited: {(4, 3), (3, 3), (4, 2)}

5. **Next iteration:**
   - Current position: (3, 3)
   - Possible moves: (2, 3), (4, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)

6. **Check each move:**
   - (2, 3): Empty space, add to queue and mark as visited.
   - (4, 3): Already visited.
   - (3, 2): Wall.
   - (3, 4): Wall.
   - (2, 2): Empty space, add to queue and mark as visited.
   - (2, 4): Wall.
   - (4, 2): Already visited.
   - (4, 4): Wall.

7. **Update the queue and visited set:**
   - Queue: [(4, 2), (2, 3), (2, 2)]
   - Visited: {(4, 3), (3, 3), (4, 2), (2, 3), (2, 2)}

8. **Next iteration:**
   - Current position: (4, 2)
   - Possible moves: (3, 2), (5, 2), (4, 1), (4, 3), (3, 1), (3, 3), (5, 1), (5, 3)

9. **Check each move:**
   - (3, 2): Wall.
   - (5, 2): Out of bounds.
   - (4, 1): Empty space, add to queue and mark as visited.
   - (4, 3): Already visited.
   - (3, 1): Goal! Return this move.

### Next Move:
The next move to reach the goal is (3, 1).

SOLVE: FAIL

For the maze you were tasked to solve, please provide: (1) the name of the general shape formed by the empty spaces (corridors), and (2) a new maze of the same size, with empty spaces that form the same shape. Encode your new maze using the same format as the original.

For example, if you answered (1) by naming the general shape of the path as "{shape}" (where "{shape}" is the name of the shape), then in (2), you should generate a new maze that meets the following criteria:
* It has the same size as the original maze
* It includes a valid path from P to G that can be reached through empty spaces
* It is not an identical copy of the original maze
* The general shape formed by its empty spaces (corridors) is recognizable as "{shape}".

### (1) General Shape of the Empty Spaces (Corridors)

The general shape formed by the empty spaces in the original maze can be described as a "Z" shape. The empty spaces form a path that starts at the bottom left, moves diagonally up to the right, then horizontally to the left, and finally diagonally up to the right again.

### (2) New Maze with the Same Shape

Here is a new maze of the same size (5x5) with empty spaces that form the same "Z" shape. The new maze includes a valid path from the player position (P) to the goal position (G).

#### New Maze Encoding:

- **Walls:** (0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (1, 0), (1, 1), (1, 2), (1, 4), (2, 0), (2, 1), (2, 4), (3, 0), (3, 2), (3, 4), (4, 4)
- **Empty:** (1, 3), (2, 2), (2, 3), (3, 3), (4, 0), (4, 1), (4, 2)
- **Player position:** (4, 3)
- **Goal:** (3, 1)

#### New Maze Layout:

```
W W W W W
W W W E W
W W E E W
W W W E W
E E E P W
```

In this new maze, the empty spaces still form a "Z" shape, and there is a valid path from the player position (4, 3) to the goal position (3, 1). The path is as follows:

1. (4, 3) -> (3, 3)
2. (3, 3) -> (2, 3)
3. (2, 3) -> (2, 2)
4. (2, 2) -> (3, 1)

This new maze meets the criteria of having the same size, a valid path, and a recognizable "Z" shape formed by the empty spaces.

RECOGNIZE: FAIL

GENERATE: FAIL