You are tasked with solving a maze. The maze is a 2D grid with walls, empty spaces, a current player position and a goal position. The maze is encoded using a list of coordinates denoting the walls, a list of coordinates denoting the empty spaces (path), and coordinates for the current player position and goal position.
Your objective is to find a step-by-step solution to navigate from the current player position (P) to the goal position (G), moving only through empty spaces while avoiding walls. For reference, the coordinates of the top left corner of the maze are (0,0). You can move to any empty space that is adjacent to the current position in the up, down, left, or right direction. After each move, the maze will be updated to reflect your new position and presented to you again.
Here is the maze you should solve:

Walls: (0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (1, 0), (1, 1), (1, 2), (1, 3), (1, 4), (2, 3), (2, 4), (3, 1), (3, 3), (3, 4), (4, 3), (4, 4)
Empty: (2, 0), (2, 1), (2, 2), (4, 0), (4, 1), (4, 2)
Player position: (3, 2)
Goal: (3, 0)

Please provide the coordinates of your next move.To solve the maze, we need to navigate from the current player position (3, 2) to the goal position (3, 0) while avoiding walls and only moving through empty spaces. Let's use a breadth-first search (BFS) algorithm to find the shortest path.

Here is the initial setup:
- Walls: (0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (1, 0), (1, 1), (1, 2), (1, 3), (1, 4), (2, 3), (2, 4), (3, 1), (3, 3), (3, 4), (4, 3), (4, 4)
- Empty: (2, 0), (2, 1), (2, 2), (4, 0), (4, 1), (4, 2)
- Player position: (3, 2)
- Goal: (3, 0)

We will use BFS to explore the maze:

1. Initialize a queue with the starting position (3, 2).
2. Keep track of visited positions to avoid cycles.
3. For each position, explore its neighbors (up, down, left, right).
4. If a neighbor is the goal, return the path.
5. If a neighbor is an empty space and not visited, add it to the queue.

Let's start the BFS:

1. Start at (3, 2).
2. Explore neighbors:
   - Up: (2, 2) (empty)
   - Down: (4, 2) (empty)
   - Left: (3, 1) (wall)
   - Right: (3, 3) (wall)

Next move options are (2, 2) and (4, 2). Let's choose (2, 2) as the next move.

Next move: (2, 2)

Here is the current state of the maze after your latest move:

Walls: (0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (1, 0), (1, 1), (1, 2), (1, 3), (1, 4), (2, 3), (2, 4), (3, 1), (3, 3), (3, 4), (4, 3), (4, 4)
Empty: (2, 0), (2, 1), (3, 2), (4, 0), (4, 1), (4, 2)
Player position: (2, 2)
Goal: (3, 0)

Please provide the coordinates of your next move.Let's continue the BFS from the current player position (2, 2).

1. Current position: (2, 2)
2. Explore neighbors:
   - Up: (1, 2) (wall)
   - Down: (3, 2) (empty, but already visited)
   - Left: (2, 1) (empty)
   - Right: (2, 3) (wall)

Next move options are (2, 1). Let's choose (2, 1) as the next move.

Next move: (2, 1)

Here is the current state of the maze after your latest move:

Walls: (0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (1, 0), (1, 1), (1, 2), (1, 3), (1, 4), (2, 3), (2, 4), (3, 1), (3, 3), (3, 4), (4, 3), (4, 4)
Empty: (2, 0), (2, 2), (3, 2), (4, 0), (4, 1), (4, 2)
Player position: (2, 1)
Goal: (3, 0)

Please provide the coordinates of your next move.Let's continue the BFS from the current player position (2, 1).

1. Current position: (2, 1)
2. Explore neighbors:
   - Up: (1, 1) (wall)
   - Down: (3, 1) (wall)
   - Left: (2, 0) (empty)
   - Right: (2, 2) (empty, but already visited)

Next move options are (2, 0). Let's choose (2, 0) as the next move.

Next move: (2, 0)

Here is the current state of the maze after your latest move:

Walls: (0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (1, 0), (1, 1), (1, 2), (1, 3), (1, 4), (2, 3), (2, 4), (3, 1), (3, 3), (3, 4), (4, 3), (4, 4)
Empty: (2, 1), (2, 2), (3, 2), (4, 0), (4, 1), (4, 2)
Player position: (2, 0)
Goal: (3, 0)

Please provide the coordinates of your next move.Let's continue the BFS from the current player position (2, 0).

1. Current position: (2, 0)
2. Explore neighbors:
   - Up: (1, 0) (wall)
   - Down: (3, 0) (goal)
   - Left: (2, -1) (out of bounds)
   - Right: (2, 1) (empty, but already visited)

The next move option is (3, 0), which is the goal.

Next move: (3, 0)

SOLVE: SUCCESS

For the maze you were tasked to solve, please provide: (1) the name of the general shape formed by the empty spaces (corridors), and (2) a new maze of the same size, with empty spaces that form the same shape. Encode your new maze using the same format as the original.

For example, if you answered (1) by naming the general shape of the path as "{shape}" (where "{shape}" is the name of the shape), then in (2), you should generate a new maze that meets the following criteria:
* It has the same size as the original maze
* It includes a valid path from P to G that can be reached through empty spaces
* It is not an identical copy of the original maze
* The general shape formed by its empty spaces (corridors) is recognizable as "{shape}".

(1) The general shape formed by the empty spaces (corridors) in the original maze is an "L" shape.

(2) Here is a new maze of the same size (5x5), with empty spaces that form the same "L" shape:

Walls: (0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (1, 0), (1, 1), (1, 2), (1, 3), (1, 4), (2, 0), (2, 1), (2, 3), (2, 4), (3, 0), (3, 1), (3, 3), (3, 4), (4, 3), (4, 4)
Empty: (2, 2), (3, 2), (4, 0), (4, 1), (4, 2)
Player position: (4, 2)
Goal: (2, 2)

This new maze maintains the "L" shape formed by the empty spaces and provides a valid path from the player position to the goal.

RECOGNIZE: FAIL

GENERATE: FAIL